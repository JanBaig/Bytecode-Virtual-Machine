
NOTES

Main 
-> VM 
	-> Interpret()	// init a chunk, start the compilation process and store the compiled bytecode into the chunk along with its constants
		->  Compile()  
			-> init scanner 
			-> recursion with pratt parsing  

Sequence:
1. compilation (pratt parsing)
2. Scanning 
3. Debugging Information
4. Interpretation 

LOGIC

2 + 7 * 14
(2 + 7) * 14 ["Is the + of great precedance than the upcomming *?"]
yes
2 + (7 * 14) ["Is there anything left?"]
no 
evaluate
Answer = (2 + (7 * 14))

2 + 3
(2)(+)3 
currently stopped at the '+' and calls the mainParse functionns on the 3
after the parsing is done from the 3 onwards, execution is returned to the binary function 
binary function now has both of its arguments fully evaluated (bytecodes emmited)
now it can push its own OP_ADD bytecode 

- Arg1Res
- Arg2Res
- OP_ADD